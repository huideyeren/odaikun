name: Build and Test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and run containers.
        run: |
          docker-compose up -d
          sleep 5
          docker-compose run --rm backend alembic upgrade head
          docker-compose run --rm backend python3 app/initial_data.py
      - name: Check Python syntax by black.
        run: docker-compose run backend black /app --check --diff
      - name: Check Python syntax by flake8.
        run: docker-compose run backend flake8 /app
      - name: Check Python Imports.
        run: docker-compose run backend isort -c /app
      - name: Check Python Types.
        run: docker-compose run backend mypy /app
      - name: Tests for backend.
        run: docker-compose run backend pytest -v
      - name: Check JavaScript/TypeScript syntax.
        run: docker-compose run frontend eslint-docker
      - name: Tests for frontend.
        run: docker-compose run frontend test

  licensed_ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 10.x, 12.x ]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - run: npm install --production
    - id: licensed
      uses: jonabc/licensed-ci@v1.5.2
      with:
        version: 2.x
        github_token: ${{ secrets.TOKEN }}
        workflow: branch
    - uses: actions/github-script@0.2.0
      if: always() && steps.licensed.outputs.pr_number
      with:
        github_token: ${{ secrets.TOKEN }}
        script: |
          github.issues.createComment({
            ...context.repo,
            issue_number: ${{ steps.licensed.outputs.pr_number }}
            body: 'My custom PR message'
          })
